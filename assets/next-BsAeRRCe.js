import{f,L as l}from"./index--Cfhpedu.js";const o=require("./gramax-git.node"),i=e=>{try{return JSON.parse(e)}catch{return e}},y=async(e,c)=>{let s=null;e=="clone"&&(c.callback=(t,r)=>f[c.opts.cancelToken]?.(JSON.parse(r))),e=="diff"&&(s=JSON.stringify(c)),typeof c.scope<"u"&&(c.scope=p(c.scope));try{const r=await(s?o[e](s):o[e](...Object.values(c).filter(n=>n!=null)));if(r?.stack)throw r;return Promise.resolve(typeof r=="string"?JSON.parse(r):r)}catch(t){let r=typeof t=="string"?i(t):t;return r=t.stack?i(t.message):r,c?.creds?.accessToken&&(c.creds.accessToken="<redacted>"),Promise.reject(new l(`git (${e}, ${r.class??"<unknown class>"}, ${r.code??"<unknown code>"})`,`${r?.message?.trim()||r}
Args: ${JSON.stringify(c,null,4)}`,r.class,r.code,e))}},p=e=>{if(!e||e==="HEAD")return{objectType:"Head",reference:null};if(e.commit)return{objectType:"Commit",reference:e.commit};if(e.reference)return{objectType:"Reference",reference:e.reference}};export{y as call};
